<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mainsoft.mlp.reconciliation.modules.dao.PayPaymentBillDao">
    
	<sql id="payPaymentBillColumns">
		a.id AS "id",
		a.district AS "district",
		a.finish_time AS "finishTime",
		a.owner_company_id AS "ownerCompanyId",
		a.revenue AS "revenue",
		a.status AS "status",
		a.defray_bill AS "defrayBill",
		a.verify AS "verify",
		a.origin AS "origin",
		a.create_by AS "createBy.id",
		a.create_name AS "createBy.name",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_name AS "updateBy.name",
		a.update_date AS "updateDate",
		a.del_flag AS "delFlag",
		a.remarks AS "remarks",
		a.business_type AS "businessType",
		C.INVOICE as "payPaymentBillFollow.invoice"
		
	</sql>
	
	<sql id="payPaymentBillJoins">
		left join PAY_PAYMENT_BILL_FOLLOW c on c.id = a.id
		left join PAY_DEFRAY_BILL d on d.ID = a.DEFRAY_BILL
	</sql>
    
	<select id="get" resultType="com.mainsoft.mlp.reconciliation.modules.entity.PayPaymentBill">
		SELECT 
			<include refid="payPaymentBillColumns"/>
		FROM pay_payment_bill a
		<include refid="payPaymentBillJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="com.mainsoft.mlp.reconciliation.modules.entity.PayPaymentBill">
		SELECT 
			<include refid="payPaymentBillColumns"/>
		FROM pay_payment_bill a
		<include refid="payPaymentBillJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="beginCreateDate != null and endCreateDate != null">
				and a.CREATE_DATE between #{beginCreateDate} and #{endCreateDate}
			</if>
			<if test="beginPayDate != null and endPayDate != null">
				and d.finish_time between #{beginPayDate} and #{endPayDate}
			</if>
			<if test="id != null and id != ''">
				and a.id like '%'||#{id}||'%'
			</if>
			<if test="status != null and status != ''">
				and a.status = #{status}
			</if>
			<if test="ownerCompanyId != null and ownerCompanyId != ''">
				and a.owner_company_id = #{ownerCompanyId}
			</if>
			<if	test="district != null and district != ''">
				and a.district = #{district}
			</if>
			<if	test="verify != null and verify != ''">
				and a.verify = #{verify}
			</if>
			<if test="businessType != null and businessType != ''">
				and a.business_type = #{businessType}
			</if>
			<if	test="payPaymentBillFollow != null and payPaymentBillFollow.invoice != null ">
				and c.INVOICE = #{payPaymentBillFollow.invoice}
			</if>
			<if test="paymentBillList != null">
				and a.id in <foreach collection="paymentBillList" item="item" open="(" close=")" separator=",">
					#{item}
				</foreach>
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<!-- 查找港口建设费的缴费单 -->
	<select id="findListByPortConstructionFee" resultType="com.mainsoft.mlp.reconciliation.modules.entity.PayPaymentBill">
		SELECT 
			<include refid="payPaymentBillColumns"/>
			,b.freightCount as "freightCount"
		FROM pay_payment_bill a
		left join PAY_PAYMENT_BILL_FOLLOW c on c.id = a.id		
		left join (select id,count(1) freightCount from pay_payment_bill_detail group by (id)) b on b.id=a.id
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="beginCreateDate != null and endCreateDate != null">
				and a.CREATE_DATE between #{beginCreateDate} and #{endCreateDate}
			</if>
			<if test="beginPayDate != null and endPayDate != null">
				and a.finish_time between #{beginPayDate} and #{endPayDate}
			</if>
			<if test="id != null and id != ''">
				and a.id like '%'||#{id}||'%'
			</if>
			<if test="status != null and status != ''">
				and a.status = #{status}
			</if>
			<if test="ownerCompanyId != null and ownerCompanyId != ''">
				and a.owner_company_id = #{ownerCompanyId}
			</if>
			<if	test="district != null and district != ''">
				and a.district = #{district}
			</if>
			<if	test="verify != null and verify != ''">
				and a.verify = #{verify}
			</if>
			<if test="businessType != null and businessType != ''">
				and a.business_type = #{businessType}
			</if>
			<if	test="payPaymentBillFollow != null and payPaymentBillFollow.invoice != null and payPaymentBillFollow.invoice != ''">
				and c.INVOICE = #{payPaymentBillFollow.invoice}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findPageForWebService" resultType="com.mainsoft.mlp.reconciliation.modules.entity.PayPaymentBill">
		SELECT 
			a.id AS "id",
			a.district AS "district",
			a.owner_company_id AS "ownerCompanyId",
			a.revenue AS "revenue",
			a.status AS "status",
			a.defray_bill AS "defrayBill",
			a.verify AS "verify",
			a.origin AS "origin",
			a.create_by AS "createBy.id",
			a.create_name AS "createBy.name",
			a.create_date AS "createDate",
			a.update_by AS "updateBy.id",
			a.update_name AS "updateBy.name",
			a.update_date AS "updateDate",
			a.del_flag AS "delFlag",
			a.remarks AS "remarks",
			c.INVOICE as "payPaymentBillFollow.invoice",
			c.title as "payPaymentBillFollow.title",
			c.AVENUE as "payPaymentBillFollow.avenue",
			d.finish_time AS "payDefrayBill.finishTime",
			d.avenue AS "payDefrayBill.avenue",
			d.id AS "payDefrayBill.id",
			d.update_name AS "payer"
		FROM pay_payment_bill a
			left join PAY_PAYMENT_BILL_FOLLOW c on c.id = a.id
			left join PAY_DEFRAY_BILL d on d.ID = a.DEFRAY_BILL
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="beginPayDate != null and endPayDate != null">
				and d.finish_time between #{beginPayDate} and #{endPayDate}
			</if>
			<if test="beginCreateDate != null and endCreateDate != null">
				and a.CREATE_DATE between #{beginCreateDate} and #{endCreateDate}
			</if>
			<if test="id != null and id != ''">
				and a.id like '%'||#{id}||'%'
			</if>
			<if test="status != null and status != ''">
				and a.status = #{status}
			</if>
			<if	test="district != null and district != ''">
				and a.district = #{district}
			</if>
			<if	test="verify != null and verify != ''">
				and a.verify = #{verify}
			</if>
			<if	test="payPaymentBillFollow != null and payPaymentBillFollow.invoice != null ">
				and c.INVOICE = #{payPaymentBillFollow.invoice}
			</if>
			<if test="payDefrayBill != null and payDefrayBill.id != null and payDefrayBill.id != ''">
				and d.id like '%'||#{payDefrayBill.id}||'%'
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findNoEnvelopPaymentBillListForWebService" resultType="com.mainsoft.mlp.reconciliation.modules.entity.PayPaymentBill">
		SELECT 
			a.id AS "id",
			a.district AS "district",
			a.owner_company_id AS "ownerCompanyId",
			a.revenue AS "revenue",
			a.status AS "status",
			a.defray_bill AS "defrayBill",
			a.verify AS "verify",
			a.origin AS "origin",
			a.create_by AS "createBy.id",
			a.create_name AS "createBy.name",
			a.create_date AS "createDate",
			a.update_by AS "updateBy.id",
			a.update_name AS "updateBy.name",
			a.update_date AS "updateDate",
			a.del_flag AS "delFlag",
			a.remarks AS "remarks",
			c.INVOICE as "payPaymentBillFollow.invoice",
			c.title as "payPaymentBillFollow.title",
			c.AVENUE as "payPaymentBillFollow.avenue",
			d.finish_time AS "payDefrayBill.finishTime",
			d.avenue AS "payDefrayBill.avenue",
			d.id AS "payDefrayBill.id"
		FROM pay_payment_bill a
			left join PAY_PAYMENT_BILL_FOLLOW c on c.id = a.id
			left join PAY_DEFRAY_BILL d on d.ID = a.DEFRAY_BILL
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			and (c.ENVELOPE is null
			<if test="beginPayDate != null and endPayDate != null">
				and d.finish_time between #{beginPayDate} and #{endPayDate}
			</if>
			<if test="beginCreateDate != null and endCreateDate != null">
				and a.CREATE_DATE between #{beginCreateDate} and #{endCreateDate}
			</if>
			<if test="id != null and id != ''">
				and a.id like '%'||#{id}||'%'
			</if>
			<if test="status != null and status != ''">
				and a.status = #{status}
			</if>
			<if	test="district != null and district != ''">
				and a.district = #{district}
			</if>
			<if	test="verify != null and verify != ''">
				and a.verify = #{verify}
			</if>
			<if	test="payPaymentBillFollow != null and payPaymentBillFollow.invoice != null">
				and c.INVOICE = #{payPaymentBillFollow.invoice}
			</if>
			<if test="payPaymentBillFollow != null and payPaymentBillFollow.avenue != null and payPaymentBillFollow.avenue != ''">
				and c.avenue = #{payPaymentBillFollow.avenue}
			</if>
			<if test="payDefrayBill != null and payDefrayBill.id != null and payDefrayBill.id != ''">
				and d.id like '%'||#{payDefrayBill.id}||'%'
			</if>)
			<if test="paymentBillList != null">
				or a.id in
				<foreach collection="paymentBillList" item="item" open="(" close=")" separator=",">
					#{item}
				</foreach>
			</if>
			
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="com.mainsoft.mlp.reconciliation.modules.entity.PayPaymentBill">
		SELECT 
			<include refid="payPaymentBillColumns"/>
		FROM pay_payment_bill a
		<include refid="payPaymentBillJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	<!--根据缴费单编码集合查询所有缴费单信息  -->
	<select id="findPaymentBillListByIds" resultType="com.mainsoft.mlp.reconciliation.modules.entity.PayPaymentBill">
		SELECT 
			<include refid="payPaymentBillColumns"/>
		FROM pay_payment_bill a
		<include refid="payPaymentBillJoins"/>
		<where>			
			a.del_flag = '0'
			and a.id in
			<foreach collection="paymentIds" item="id" open="(" separator="," close=")">
				#{id}
			</foreach>
		</where>				
	</select>
	
	<!--根据考试批次号查询对应的缴费单信息  -->
	<select id="findPaymentBillByorigin" resultType="com.mainsoft.mlp.reconciliation.modules.entity.PayPaymentBill">
		SELECT 
			a.id AS "id",
		a.district AS "district",
		a.finish_time AS "finishTime",
		a.owner_company_id AS "ownerCompanyId",
		a.revenue AS "revenue",
		a.status AS "status",
		a.defray_bill AS "defrayBill",
		a.verify AS "verify",
		a.origin AS "origin",
		a.create_by AS "createBy.id",
		a.create_name AS "createBy.name",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_name AS "updateBy.name",
		a.update_date AS "updateDate",
		a.del_flag AS "delFlag",
		a.remarks AS "remarks",
		a.business_type AS "businessType"
		FROM pay_payment_bill a
		<where>			
			a.del_flag = '0'
			and a.origin = #{origin}
			
		</where>				
	</select>
	<!--根据缴费单编码集合查询已经缴费或者已经作废的缴费单  -->
	<select id="checkPaymentBillListForPayStatus" resultType="java.lang.Integer">
		SELECT 
			count(*)
		FROM pay_payment_bill a		
		<where>			
			(a.status = '02' or a.status = '03') 
			and a.id in
			<foreach collection="paymentIds" item="id" open="(" separator="," close=")">
				#{id}
			</foreach>
		</where>				
	</select>
	
	<insert id="insert">
		INSERT INTO pay_payment_bill(
			id,
			district,
			owner_company_id,
			revenue,
			status,
			defray_bill,
			verify,
			origin,
			business_type,
			create_by,
			create_name,
			create_date,
			update_by,
			update_name,
			update_date,
			del_flag,
			remarks,
			finish_time,
			delay_time
		) VALUES (
			#{id},
			#{district},
			#{ownerCompanyId},
			#{revenue},
			#{status},
			#{defrayBill},
			#{verify},
			#{origin},
			#{businessType},
			#{createBy.id},
			#{createBy.name},
			#{createDate},
			#{updateBy.id},
			#{updateBy.name},
			#{updateDate},
			#{delFlag},
			#{remarks},
			#{finishDate},
			#{delayTime}
		)
	</insert>
	
	<update id="update">
		UPDATE pay_payment_bill SET 	
			district = #{district},
			owner_company_id = #{ownerCompanyId},
			revenue = #{revenue},
			status = #{status},
			defray_bill = #{defrayBill},
			verify = #{verify},
			origin = #{origin},
			business_type = #{businessType},
			update_by = #{updateBy.id},
			update_name = #{updateBy.name},
			update_date = #{updateDate},
			remarks = #{remarks},
			finish_time = #{finishDate}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE pay_payment_bill SET 
			STATUS = #{status},
			update_by = #{updateBy.id},
			update_name = #{updateBy.name},
			update_date = #{updateDate}
		WHERE id = #{id}
	</update>
	
	<update id="updateDefrayNo">
		UPDATE pay_payment_bill SET 
			defray_bill = #{defrayBill}
		WHERE id = #{id}
	</update>
	
	<update id="updVerifyStatus">
		UPDATE pay_payment_bill SET 
			VERIFY = #{verify}
		WHERE id in 
		<foreach collection="paymentBillList" open="(" close=")" separator="," item="item">
			#{item}
		</foreach>
	</update>
	<update id="cancellationPaymentBill">
		UPDATE pay_payment_bill SET 			
			remarks = #{remarks},
			del_flag = '1'
		WHERE id in <foreach collection="payBillList" item="item" index="index"  open="(" separator="," close=")">#{item}</foreach>
	</update>
</mapper>